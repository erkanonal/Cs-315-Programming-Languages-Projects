%option noyywrap
LETTER [a-zA-Z]
DIGIT [0-9]
SPACE [ \t\n]+
ASSIGN =
PLUS \+
MINUS -
DIV \/
MUL \*
COMMA ,
GT >
LT <
GTE >=
LTE <=
QUESTION \?
NOT !
AND &&
OR \|\|
POW \^
LPARAM \(
RPARAM \)
LBRACKET \[
RBRACKET \]
LBRACE \{
RBRACE \}
NEWLINE \n
NONNEWLINE [^\n]
NONSTAR [^\*]
NONSTARNONDIV [^\*/]
UNDERSCORE _
STRING \"([^\\\"]|\\\\|\\\"|\\t|\\n)*\"
BOOL true|false
ID ({LETTER}|{UNDERSCORE})({LETTER}|{DIGIT}|{UNDERSCORE})*
INT ({MINUS}|{PLUS})?{DIGIT}+
FLOAT ({MINUS}|{PLUS})?({DIGIT}*("."{DIGIT}|{DIGIT}"."){DIGIT}*)
PRECOLOR BLACK|WHITE|GREEN|RED|YELLOW|ORANGE|BLUE
COLOR Color
LOCATION Location
SIZE Size
RECTANGLE Rectangle
LINE Line
OVAL Oval
STROKE Stroke
NEWOBJECT newObject
WHILE while
FOR for
BREAK break
CONTINUE continue
FUNCTION function
IF if
ELSE else
ELSEIF "else if"
RETURN return
ENDSTMT ;
COMMENT {DIV}{DIV}{NONNEWLINE}*{NEWLINE}|{DIV}\*({NONSTAR}|\*+{NONSTARNONDIV})*\*+{DIV}

%%
{SPACE} ;
{COMMENT} ;
{NEWOBJECT} printf("<NEWOBJECT>");
{FUNCTION} printf("<FUNCTION>");
{IF} printf("<IF>");
{ELSE} printf("<ELSE>");
{ELSEIF} printf("<ELSEIF>");
{RETURN} printf("<RETURN>");
{FOR} printf("<FOR>");
{ENDSTMT} printf("<ENDSTMT>");
{CONTINUE} printf("<CONTINUE>");
{BREAK} printf("<BREAK>");
{WHILE} printf("<WHILE>");
{COMMA} printf("<COMMA>");
{ASSIGN} printf("<ASSIGN>");
{NOT} printf("<NOT>");
{AND} printf("<AND>");
{OR} printf("<OR>");
{QUESTION} printf("<QUESTION>");
{LTE} printf("<LTE>");
{GTE} printf("GTE>");
{LT} printf("<LT>");
{GT} printf("<GT>");
{POW} printf("<POW>");
{LBRACE} printf("<LBRACE>");
{RBRACE} printf("<RBRACE>");
{PLUS} printf("<PLUS>");
{MINUS} printf("<MINUS>");
{MUL} printf("<STAR>");
{DIV} printf("<DIV>");
{LPARAM} printf("<LPARAM>");
{RPARAM} printf("<RPARAM>");
{LBRACKET} printf("<LBRACKET>");
{RBRACKET} printf("<RBRACKET>");
{PRECOLOR} printf("<PDCOLOR,%s>",yytext);
{OVAL} printf("<SHAPE,Oval>");
{STROKE} printf("<TYPE,Stroke>");
{RECTANGLE} printf("<SHAPE,Rectangle>");
{LINE} printf("<SHAPE,Line>");
{COLOR} printf("<TYPE,Color>");
{LOCATION} printf("<TYPE,Location>");
{SIZE} printf("<TYPE,Size>");
{STRING} printf("<STRING,%s>",yytext);
{BOOL} printf("<BOOL,%s>",yytext);
{INT} printf("<INT,%s>",yytext);
{FLOAT} printf("<FLOAT,%s>",yytext);
{ID} printf("<ID,%s>",yytext);
%% 

int main()
{
	yylex();
	return 0;
}